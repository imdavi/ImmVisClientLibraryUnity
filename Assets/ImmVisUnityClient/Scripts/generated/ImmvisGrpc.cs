// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: immvis.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class ImmVis
{
  static readonly string __ServiceName = "ImmVis";

  static readonly grpc::Marshaller<global::OpenDatasetFileRequest> __Marshaller_OpenDatasetFileRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OpenDatasetFileRequest.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::OpenDatasetFileResponse> __Marshaller_OpenDatasetFileResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OpenDatasetFileResponse.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::Void> __Marshaller_Void = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Void.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DimensionInfo> __Marshaller_DimensionInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DimensionInfo.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::Dimension> __Marshaller_Dimension = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Dimension.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::Feature> __Marshaller_Feature = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Feature.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DimensionData> __Marshaller_DimensionData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DimensionData.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::KMeansRequest> __Marshaller_KMeansRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KMeansRequest.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::KMeansCentroid> __Marshaller_KMeansCentroid = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KMeansCentroid.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::DataRow> __Marshaller_DataRow = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DataRow.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::CorrelationRequest> __Marshaller_CorrelationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CorrelationRequest.Parser.ParseFrom);
  static readonly grpc::Marshaller<global::FloatResult> __Marshaller_FloatResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FloatResult.Parser.ParseFrom);

  static readonly grpc::Method<global::OpenDatasetFileRequest, global::OpenDatasetFileResponse> __Method_OpenDatasetFile = new grpc::Method<global::OpenDatasetFileRequest, global::OpenDatasetFileResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "OpenDatasetFile",
      __Marshaller_OpenDatasetFileRequest,
      __Marshaller_OpenDatasetFileResponse);

  static readonly grpc::Method<global::Void, global::DimensionInfo> __Method_GetDatasetDimensions = new grpc::Method<global::Void, global::DimensionInfo>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "GetDatasetDimensions",
      __Marshaller_Void,
      __Marshaller_DimensionInfo);

  static readonly grpc::Method<global::Dimension, global::Feature> __Method_GetDimensionDescriptiveStatistics = new grpc::Method<global::Dimension, global::Feature>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "GetDimensionDescriptiveStatistics",
      __Marshaller_Dimension,
      __Marshaller_Feature);

  static readonly grpc::Method<global::Dimension, global::DimensionInfo> __Method_GetDimensionInfo = new grpc::Method<global::Dimension, global::DimensionInfo>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetDimensionInfo",
      __Marshaller_Dimension,
      __Marshaller_DimensionInfo);

  static readonly grpc::Method<global::Dimension, global::DimensionData> __Method_GetDimensionData = new grpc::Method<global::Dimension, global::DimensionData>(
      grpc::MethodType.DuplexStreaming,
      __ServiceName,
      "GetDimensionData",
      __Marshaller_Dimension,
      __Marshaller_DimensionData);

  static readonly grpc::Method<global::Dimension, global::DimensionData> __Method_GetOutlierMapping = new grpc::Method<global::Dimension, global::DimensionData>(
      grpc::MethodType.ClientStreaming,
      __ServiceName,
      "GetOutlierMapping",
      __Marshaller_Dimension,
      __Marshaller_DimensionData);

  static readonly grpc::Method<global::KMeansRequest, global::KMeansCentroid> __Method_GetKMeansCentroids = new grpc::Method<global::KMeansRequest, global::KMeansCentroid>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "GetKMeansCentroids",
      __Marshaller_KMeansRequest,
      __Marshaller_KMeansCentroid);

  static readonly grpc::Method<global::KMeansRequest, global::DimensionData> __Method_GetKMeansClusterMapping = new grpc::Method<global::KMeansRequest, global::DimensionData>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetKMeansClusterMapping",
      __Marshaller_KMeansRequest,
      __Marshaller_DimensionData);

  static readonly grpc::Method<global::Void, global::DataRow> __Method_GetDatasetValues = new grpc::Method<global::Void, global::DataRow>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "GetDatasetValues",
      __Marshaller_Void,
      __Marshaller_DataRow);

  static readonly grpc::Method<global::CorrelationRequest, global::FloatResult> __Method_GetCorrelationBetweenTwoDimensions = new grpc::Method<global::CorrelationRequest, global::FloatResult>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetCorrelationBetweenTwoDimensions",
      __Marshaller_CorrelationRequest,
      __Marshaller_FloatResult);

  static readonly grpc::Method<global::Void, global::DataRow> __Method_GetCorrelationMatrix = new grpc::Method<global::Void, global::DataRow>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "GetCorrelationMatrix",
      __Marshaller_Void,
      __Marshaller_DataRow);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::ImmvisReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of ImmVis</summary>
  [grpc::BindServiceMethod(typeof(ImmVis), "BindService")]
  public abstract partial class ImmVisBase
  {
    public virtual global::System.Threading.Tasks.Task<global::OpenDatasetFileResponse> OpenDatasetFile(global::OpenDatasetFileRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task GetDatasetDimensions(global::Void request, grpc::IServerStreamWriter<global::DimensionInfo> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task GetDimensionDescriptiveStatistics(global::Dimension request, grpc::IServerStreamWriter<global::Feature> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::DimensionInfo> GetDimensionInfo(global::Dimension request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task GetDimensionData(grpc::IAsyncStreamReader<global::Dimension> requestStream, grpc::IServerStreamWriter<global::DimensionData> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::DimensionData> GetOutlierMapping(grpc::IAsyncStreamReader<global::Dimension> requestStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task GetKMeansCentroids(global::KMeansRequest request, grpc::IServerStreamWriter<global::KMeansCentroid> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::DimensionData> GetKMeansClusterMapping(global::KMeansRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task GetDatasetValues(global::Void request, grpc::IServerStreamWriter<global::DataRow> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task<global::FloatResult> GetCorrelationBetweenTwoDimensions(global::CorrelationRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    public virtual global::System.Threading.Tasks.Task GetCorrelationMatrix(global::Void request, grpc::IServerStreamWriter<global::DataRow> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for ImmVis</summary>
  public partial class ImmVisClient : grpc::ClientBase<ImmVisClient>
  {
    /// <summary>Creates a new client for ImmVis</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    public ImmVisClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for ImmVis that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    public ImmVisClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    protected ImmVisClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    protected ImmVisClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    public virtual global::OpenDatasetFileResponse OpenDatasetFile(global::OpenDatasetFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return OpenDatasetFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::OpenDatasetFileResponse OpenDatasetFile(global::OpenDatasetFileRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_OpenDatasetFile, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::OpenDatasetFileResponse> OpenDatasetFileAsync(global::OpenDatasetFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return OpenDatasetFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::OpenDatasetFileResponse> OpenDatasetFileAsync(global::OpenDatasetFileRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_OpenDatasetFile, null, options, request);
    }
    public virtual grpc::AsyncServerStreamingCall<global::DimensionInfo> GetDatasetDimensions(global::Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetDatasetDimensions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncServerStreamingCall<global::DimensionInfo> GetDatasetDimensions(global::Void request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_GetDatasetDimensions, null, options, request);
    }
    public virtual grpc::AsyncServerStreamingCall<global::Feature> GetDimensionDescriptiveStatistics(global::Dimension request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetDimensionDescriptiveStatistics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncServerStreamingCall<global::Feature> GetDimensionDescriptiveStatistics(global::Dimension request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_GetDimensionDescriptiveStatistics, null, options, request);
    }
    public virtual global::DimensionInfo GetDimensionInfo(global::Dimension request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetDimensionInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::DimensionInfo GetDimensionInfo(global::Dimension request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetDimensionInfo, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::DimensionInfo> GetDimensionInfoAsync(global::Dimension request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetDimensionInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::DimensionInfo> GetDimensionInfoAsync(global::Dimension request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetDimensionInfo, null, options, request);
    }
    public virtual grpc::AsyncDuplexStreamingCall<global::Dimension, global::DimensionData> GetDimensionData(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetDimensionData(new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncDuplexStreamingCall<global::Dimension, global::DimensionData> GetDimensionData(grpc::CallOptions options)
    {
      return CallInvoker.AsyncDuplexStreamingCall(__Method_GetDimensionData, null, options);
    }
    public virtual grpc::AsyncClientStreamingCall<global::Dimension, global::DimensionData> GetOutlierMapping(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetOutlierMapping(new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncClientStreamingCall<global::Dimension, global::DimensionData> GetOutlierMapping(grpc::CallOptions options)
    {
      return CallInvoker.AsyncClientStreamingCall(__Method_GetOutlierMapping, null, options);
    }
    public virtual grpc::AsyncServerStreamingCall<global::KMeansCentroid> GetKMeansCentroids(global::KMeansRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetKMeansCentroids(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncServerStreamingCall<global::KMeansCentroid> GetKMeansCentroids(global::KMeansRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_GetKMeansCentroids, null, options, request);
    }
    public virtual global::DimensionData GetKMeansClusterMapping(global::KMeansRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetKMeansClusterMapping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::DimensionData GetKMeansClusterMapping(global::KMeansRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetKMeansClusterMapping, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::DimensionData> GetKMeansClusterMappingAsync(global::KMeansRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetKMeansClusterMappingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::DimensionData> GetKMeansClusterMappingAsync(global::KMeansRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetKMeansClusterMapping, null, options, request);
    }
    public virtual grpc::AsyncServerStreamingCall<global::DataRow> GetDatasetValues(global::Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetDatasetValues(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncServerStreamingCall<global::DataRow> GetDatasetValues(global::Void request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_GetDatasetValues, null, options, request);
    }
    public virtual global::FloatResult GetCorrelationBetweenTwoDimensions(global::CorrelationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetCorrelationBetweenTwoDimensions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual global::FloatResult GetCorrelationBetweenTwoDimensions(global::CorrelationRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetCorrelationBetweenTwoDimensions, null, options, request);
    }
    public virtual grpc::AsyncUnaryCall<global::FloatResult> GetCorrelationBetweenTwoDimensionsAsync(global::CorrelationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetCorrelationBetweenTwoDimensionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncUnaryCall<global::FloatResult> GetCorrelationBetweenTwoDimensionsAsync(global::CorrelationRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetCorrelationBetweenTwoDimensions, null, options, request);
    }
    public virtual grpc::AsyncServerStreamingCall<global::DataRow> GetCorrelationMatrix(global::Void request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetCorrelationMatrix(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    public virtual grpc::AsyncServerStreamingCall<global::DataRow> GetCorrelationMatrix(global::Void request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_GetCorrelationMatrix, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    protected override ImmVisClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new ImmVisClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static grpc::ServerServiceDefinition BindService(ImmVisBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_OpenDatasetFile, serviceImpl.OpenDatasetFile)
        .AddMethod(__Method_GetDatasetDimensions, serviceImpl.GetDatasetDimensions)
        .AddMethod(__Method_GetDimensionDescriptiveStatistics, serviceImpl.GetDimensionDescriptiveStatistics)
        .AddMethod(__Method_GetDimensionInfo, serviceImpl.GetDimensionInfo)
        .AddMethod(__Method_GetDimensionData, serviceImpl.GetDimensionData)
        .AddMethod(__Method_GetOutlierMapping, serviceImpl.GetOutlierMapping)
        .AddMethod(__Method_GetKMeansCentroids, serviceImpl.GetKMeansCentroids)
        .AddMethod(__Method_GetKMeansClusterMapping, serviceImpl.GetKMeansClusterMapping)
        .AddMethod(__Method_GetDatasetValues, serviceImpl.GetDatasetValues)
        .AddMethod(__Method_GetCorrelationBetweenTwoDimensions, serviceImpl.GetCorrelationBetweenTwoDimensions)
        .AddMethod(__Method_GetCorrelationMatrix, serviceImpl.GetCorrelationMatrix).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  public static void BindService(grpc::ServiceBinderBase serviceBinder, ImmVisBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_OpenDatasetFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OpenDatasetFileRequest, global::OpenDatasetFileResponse>(serviceImpl.OpenDatasetFile));
    serviceBinder.AddMethod(__Method_GetDatasetDimensions, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Void, global::DimensionInfo>(serviceImpl.GetDatasetDimensions));
    serviceBinder.AddMethod(__Method_GetDimensionDescriptiveStatistics, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Dimension, global::Feature>(serviceImpl.GetDimensionDescriptiveStatistics));
    serviceBinder.AddMethod(__Method_GetDimensionInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Dimension, global::DimensionInfo>(serviceImpl.GetDimensionInfo));
    serviceBinder.AddMethod(__Method_GetDimensionData, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Dimension, global::DimensionData>(serviceImpl.GetDimensionData));
    serviceBinder.AddMethod(__Method_GetOutlierMapping, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Dimension, global::DimensionData>(serviceImpl.GetOutlierMapping));
    serviceBinder.AddMethod(__Method_GetKMeansCentroids, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::KMeansRequest, global::KMeansCentroid>(serviceImpl.GetKMeansCentroids));
    serviceBinder.AddMethod(__Method_GetKMeansClusterMapping, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::KMeansRequest, global::DimensionData>(serviceImpl.GetKMeansClusterMapping));
    serviceBinder.AddMethod(__Method_GetDatasetValues, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Void, global::DataRow>(serviceImpl.GetDatasetValues));
    serviceBinder.AddMethod(__Method_GetCorrelationBetweenTwoDimensions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CorrelationRequest, global::FloatResult>(serviceImpl.GetCorrelationBetweenTwoDimensions));
    serviceBinder.AddMethod(__Method_GetCorrelationMatrix, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Void, global::DataRow>(serviceImpl.GetCorrelationMatrix));
  }

}
#endregion
