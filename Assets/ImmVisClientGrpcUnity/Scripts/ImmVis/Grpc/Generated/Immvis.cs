// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: immvis.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from immvis.proto</summary>
public static partial class ImmvisReflection {

  #region Descriptor
  /// <summary>File descriptor for immvis.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ImmvisReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxpbW12aXMucHJvdG8iBwoFRW1wdHkiLgoVQXZhaWxhYmxlRGF0YXNldHNM",
          "aXN0EhUKDWRhdGFzZXRzUGF0aHMYASADKAkiMAoZTG9hZERhdGFzZXRSZXF1",
          "ZXN0TWVzc2FnZRITCgtkYXRhc2V0UGF0aBgBIAEoCSIqCgZDb2x1bW4SEgoK",
          "Y29sdW1uTmFtZRgBIAEoCRIMCgR0eXBlGAIgASgJIlAKHERlc2NyaXB0aXZl",
          "U3RhdGlzdGljc0ZlYXR1cmUSDAoEbmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEo",
          "CRITCgtmZWF0dXJlVHlwZRgDIAEoCSJrCgpDb2x1bW5JbmZvEhcKBmNvbHVt",
          "bhgBIAEoCzIHLkNvbHVtbhJECh1kZXNjcmlwdGl2ZVN0YXRpc3RpY3NGZWF0",
          "dXJlcxgCIAMoCzIdLkRlc2NyaXB0aXZlU3RhdGlzdGljc0ZlYXR1cmUiXAoP",
          "RGF0YXNldE1ldGFkYXRhEhEKCXJvd3NDb3VudBgBIAEoBRIUCgxjb2x1bW5z",
          "Q291bnQYAiABKAUSIAoLY29sdW1uc0luZm8YAyADKAsyCy5Db2x1bW5JbmZv",
          "IjYKHkdldERhdGFzZXRUb1Bsb3RSZXF1ZXN0TWVzc2FnZRIUCgxjb2x1bW5z",
          "TmFtZXMYASADKAkiKgoNRGF0YXNldFRvUGxvdBIZCgRyb3dzGAEgAygLMgsu",
          "RGF0YXNldFJvdyIfCgpEYXRhc2V0Um93EhEKCXJvd1ZhbHVlcxgBIAMoAjLP",
          "AQoMSW1tVmlzUGFuZGFzEjkKFUxpc3RBdmFpbGFibGVEYXRhc2V0cxIGLkVt",
          "cHR5GhYuQXZhaWxhYmxlRGF0YXNldHNMaXN0IgASPQoLTG9hZERhdGFzZXQS",
          "Gi5Mb2FkRGF0YXNldFJlcXVlc3RNZXNzYWdlGhAuRGF0YXNldE1ldGFkYXRh",
          "IgASRQoQR2V0RGF0YXNldFRvUGxvdBIfLkdldERhdGFzZXRUb1Bsb3RSZXF1",
          "ZXN0TWVzc2FnZRoOLkRhdGFzZXRUb1Bsb3QiAGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Empty), global::Empty.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AvailableDatasetsList), global::AvailableDatasetsList.Parser, new[]{ "DatasetsPaths" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoadDatasetRequestMessage), global::LoadDatasetRequestMessage.Parser, new[]{ "DatasetPath" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Column), global::Column.Parser, new[]{ "ColumnName", "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DescriptiveStatisticsFeature), global::DescriptiveStatisticsFeature.Parser, new[]{ "Name", "Value", "FeatureType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ColumnInfo), global::ColumnInfo.Parser, new[]{ "Column", "DescriptiveStatisticsFeatures" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DatasetMetadata), global::DatasetMetadata.Parser, new[]{ "RowsCount", "ColumnsCount", "ColumnsInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetDatasetToPlotRequestMessage), global::GetDatasetToPlotRequestMessage.Parser, new[]{ "ColumnsNames" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DatasetToPlot), global::DatasetToPlot.Parser, new[]{ "Rows" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DatasetRow), global::DatasetRow.Parser, new[]{ "RowValues" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Empty : pb::IMessage<Empty> {
  private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Empty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty(Empty other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty Clone() {
    return new Empty(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Empty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Empty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Empty other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class AvailableDatasetsList : pb::IMessage<AvailableDatasetsList> {
  private static readonly pb::MessageParser<AvailableDatasetsList> _parser = new pb::MessageParser<AvailableDatasetsList>(() => new AvailableDatasetsList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AvailableDatasetsList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvailableDatasetsList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvailableDatasetsList(AvailableDatasetsList other) : this() {
    datasetsPaths_ = other.datasetsPaths_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AvailableDatasetsList Clone() {
    return new AvailableDatasetsList(this);
  }

  /// <summary>Field number for the "datasetsPaths" field.</summary>
  public const int DatasetsPathsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_datasetsPaths_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> datasetsPaths_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> DatasetsPaths {
    get { return datasetsPaths_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AvailableDatasetsList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AvailableDatasetsList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!datasetsPaths_.Equals(other.datasetsPaths_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= datasetsPaths_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    datasetsPaths_.WriteTo(output, _repeated_datasetsPaths_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += datasetsPaths_.CalculateSize(_repeated_datasetsPaths_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AvailableDatasetsList other) {
    if (other == null) {
      return;
    }
    datasetsPaths_.Add(other.datasetsPaths_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          datasetsPaths_.AddEntriesFrom(input, _repeated_datasetsPaths_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class LoadDatasetRequestMessage : pb::IMessage<LoadDatasetRequestMessage> {
  private static readonly pb::MessageParser<LoadDatasetRequestMessage> _parser = new pb::MessageParser<LoadDatasetRequestMessage>(() => new LoadDatasetRequestMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoadDatasetRequestMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadDatasetRequestMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadDatasetRequestMessage(LoadDatasetRequestMessage other) : this() {
    datasetPath_ = other.datasetPath_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadDatasetRequestMessage Clone() {
    return new LoadDatasetRequestMessage(this);
  }

  /// <summary>Field number for the "datasetPath" field.</summary>
  public const int DatasetPathFieldNumber = 1;
  private string datasetPath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DatasetPath {
    get { return datasetPath_; }
    set {
      datasetPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoadDatasetRequestMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoadDatasetRequestMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DatasetPath != other.DatasetPath) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DatasetPath.Length != 0) hash ^= DatasetPath.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DatasetPath.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DatasetPath);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DatasetPath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetPath);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoadDatasetRequestMessage other) {
    if (other == null) {
      return;
    }
    if (other.DatasetPath.Length != 0) {
      DatasetPath = other.DatasetPath;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DatasetPath = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class Column : pb::IMessage<Column> {
  private static readonly pb::MessageParser<Column> _parser = new pb::MessageParser<Column>(() => new Column());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Column> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Column() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Column(Column other) : this() {
    columnName_ = other.columnName_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Column Clone() {
    return new Column(this);
  }

  /// <summary>Field number for the "columnName" field.</summary>
  public const int ColumnNameFieldNumber = 1;
  private string columnName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ColumnName {
    get { return columnName_; }
    set {
      columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private string type_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Type {
    get { return type_; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Column);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Column other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ColumnName != other.ColumnName) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ColumnName.Length != 0) hash ^= ColumnName.GetHashCode();
    if (Type.Length != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ColumnName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ColumnName);
    }
    if (Type.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ColumnName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
    }
    if (Type.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Column other) {
    if (other == null) {
      return;
    }
    if (other.ColumnName.Length != 0) {
      ColumnName = other.ColumnName;
    }
    if (other.Type.Length != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ColumnName = input.ReadString();
          break;
        }
        case 18: {
          Type = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class DescriptiveStatisticsFeature : pb::IMessage<DescriptiveStatisticsFeature> {
  private static readonly pb::MessageParser<DescriptiveStatisticsFeature> _parser = new pb::MessageParser<DescriptiveStatisticsFeature>(() => new DescriptiveStatisticsFeature());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DescriptiveStatisticsFeature> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DescriptiveStatisticsFeature() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DescriptiveStatisticsFeature(DescriptiveStatisticsFeature other) : this() {
    name_ = other.name_;
    value_ = other.value_;
    featureType_ = other.featureType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DescriptiveStatisticsFeature Clone() {
    return new DescriptiveStatisticsFeature(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private string value_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "featureType" field.</summary>
  public const int FeatureTypeFieldNumber = 3;
  private string featureType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FeatureType {
    get { return featureType_; }
    set {
      featureType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DescriptiveStatisticsFeature);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DescriptiveStatisticsFeature other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Value != other.Value) return false;
    if (FeatureType != other.FeatureType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (FeatureType.Length != 0) hash ^= FeatureType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (FeatureType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(FeatureType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (FeatureType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FeatureType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DescriptiveStatisticsFeature other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    if (other.FeatureType.Length != 0) {
      FeatureType = other.FeatureType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
        case 26: {
          FeatureType = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ColumnInfo : pb::IMessage<ColumnInfo> {
  private static readonly pb::MessageParser<ColumnInfo> _parser = new pb::MessageParser<ColumnInfo>(() => new ColumnInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ColumnInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ColumnInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ColumnInfo(ColumnInfo other) : this() {
    column_ = other.column_ != null ? other.column_.Clone() : null;
    descriptiveStatisticsFeatures_ = other.descriptiveStatisticsFeatures_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ColumnInfo Clone() {
    return new ColumnInfo(this);
  }

  /// <summary>Field number for the "column" field.</summary>
  public const int ColumnFieldNumber = 1;
  private global::Column column_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Column Column {
    get { return column_; }
    set {
      column_ = value;
    }
  }

  /// <summary>Field number for the "descriptiveStatisticsFeatures" field.</summary>
  public const int DescriptiveStatisticsFeaturesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::DescriptiveStatisticsFeature> _repeated_descriptiveStatisticsFeatures_codec
      = pb::FieldCodec.ForMessage(18, global::DescriptiveStatisticsFeature.Parser);
  private readonly pbc::RepeatedField<global::DescriptiveStatisticsFeature> descriptiveStatisticsFeatures_ = new pbc::RepeatedField<global::DescriptiveStatisticsFeature>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::DescriptiveStatisticsFeature> DescriptiveStatisticsFeatures {
    get { return descriptiveStatisticsFeatures_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ColumnInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ColumnInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Column, other.Column)) return false;
    if(!descriptiveStatisticsFeatures_.Equals(other.descriptiveStatisticsFeatures_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (column_ != null) hash ^= Column.GetHashCode();
    hash ^= descriptiveStatisticsFeatures_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (column_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Column);
    }
    descriptiveStatisticsFeatures_.WriteTo(output, _repeated_descriptiveStatisticsFeatures_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (column_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Column);
    }
    size += descriptiveStatisticsFeatures_.CalculateSize(_repeated_descriptiveStatisticsFeatures_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ColumnInfo other) {
    if (other == null) {
      return;
    }
    if (other.column_ != null) {
      if (column_ == null) {
        Column = new global::Column();
      }
      Column.MergeFrom(other.Column);
    }
    descriptiveStatisticsFeatures_.Add(other.descriptiveStatisticsFeatures_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (column_ == null) {
            Column = new global::Column();
          }
          input.ReadMessage(Column);
          break;
        }
        case 18: {
          descriptiveStatisticsFeatures_.AddEntriesFrom(input, _repeated_descriptiveStatisticsFeatures_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class DatasetMetadata : pb::IMessage<DatasetMetadata> {
  private static readonly pb::MessageParser<DatasetMetadata> _parser = new pb::MessageParser<DatasetMetadata>(() => new DatasetMetadata());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DatasetMetadata> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetMetadata() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetMetadata(DatasetMetadata other) : this() {
    rowsCount_ = other.rowsCount_;
    columnsCount_ = other.columnsCount_;
    columnsInfo_ = other.columnsInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetMetadata Clone() {
    return new DatasetMetadata(this);
  }

  /// <summary>Field number for the "rowsCount" field.</summary>
  public const int RowsCountFieldNumber = 1;
  private int rowsCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RowsCount {
    get { return rowsCount_; }
    set {
      rowsCount_ = value;
    }
  }

  /// <summary>Field number for the "columnsCount" field.</summary>
  public const int ColumnsCountFieldNumber = 2;
  private int columnsCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ColumnsCount {
    get { return columnsCount_; }
    set {
      columnsCount_ = value;
    }
  }

  /// <summary>Field number for the "columnsInfo" field.</summary>
  public const int ColumnsInfoFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ColumnInfo> _repeated_columnsInfo_codec
      = pb::FieldCodec.ForMessage(26, global::ColumnInfo.Parser);
  private readonly pbc::RepeatedField<global::ColumnInfo> columnsInfo_ = new pbc::RepeatedField<global::ColumnInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ColumnInfo> ColumnsInfo {
    get { return columnsInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DatasetMetadata);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DatasetMetadata other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RowsCount != other.RowsCount) return false;
    if (ColumnsCount != other.ColumnsCount) return false;
    if(!columnsInfo_.Equals(other.columnsInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RowsCount != 0) hash ^= RowsCount.GetHashCode();
    if (ColumnsCount != 0) hash ^= ColumnsCount.GetHashCode();
    hash ^= columnsInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RowsCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RowsCount);
    }
    if (ColumnsCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ColumnsCount);
    }
    columnsInfo_.WriteTo(output, _repeated_columnsInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RowsCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowsCount);
    }
    if (ColumnsCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColumnsCount);
    }
    size += columnsInfo_.CalculateSize(_repeated_columnsInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DatasetMetadata other) {
    if (other == null) {
      return;
    }
    if (other.RowsCount != 0) {
      RowsCount = other.RowsCount;
    }
    if (other.ColumnsCount != 0) {
      ColumnsCount = other.ColumnsCount;
    }
    columnsInfo_.Add(other.columnsInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RowsCount = input.ReadInt32();
          break;
        }
        case 16: {
          ColumnsCount = input.ReadInt32();
          break;
        }
        case 26: {
          columnsInfo_.AddEntriesFrom(input, _repeated_columnsInfo_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GetDatasetToPlotRequestMessage : pb::IMessage<GetDatasetToPlotRequestMessage> {
  private static readonly pb::MessageParser<GetDatasetToPlotRequestMessage> _parser = new pb::MessageParser<GetDatasetToPlotRequestMessage>(() => new GetDatasetToPlotRequestMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetDatasetToPlotRequestMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDatasetToPlotRequestMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDatasetToPlotRequestMessage(GetDatasetToPlotRequestMessage other) : this() {
    columnsNames_ = other.columnsNames_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetDatasetToPlotRequestMessage Clone() {
    return new GetDatasetToPlotRequestMessage(this);
  }

  /// <summary>Field number for the "columnsNames" field.</summary>
  public const int ColumnsNamesFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_columnsNames_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> columnsNames_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> ColumnsNames {
    get { return columnsNames_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetDatasetToPlotRequestMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetDatasetToPlotRequestMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!columnsNames_.Equals(other.columnsNames_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= columnsNames_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    columnsNames_.WriteTo(output, _repeated_columnsNames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += columnsNames_.CalculateSize(_repeated_columnsNames_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetDatasetToPlotRequestMessage other) {
    if (other == null) {
      return;
    }
    columnsNames_.Add(other.columnsNames_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          columnsNames_.AddEntriesFrom(input, _repeated_columnsNames_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class DatasetToPlot : pb::IMessage<DatasetToPlot> {
  private static readonly pb::MessageParser<DatasetToPlot> _parser = new pb::MessageParser<DatasetToPlot>(() => new DatasetToPlot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DatasetToPlot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetToPlot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetToPlot(DatasetToPlot other) : this() {
    rows_ = other.rows_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetToPlot Clone() {
    return new DatasetToPlot(this);
  }

  /// <summary>Field number for the "rows" field.</summary>
  public const int RowsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::DatasetRow> _repeated_rows_codec
      = pb::FieldCodec.ForMessage(10, global::DatasetRow.Parser);
  private readonly pbc::RepeatedField<global::DatasetRow> rows_ = new pbc::RepeatedField<global::DatasetRow>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::DatasetRow> Rows {
    get { return rows_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DatasetToPlot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DatasetToPlot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rows_.Equals(other.rows_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rows_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rows_.WriteTo(output, _repeated_rows_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rows_.CalculateSize(_repeated_rows_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DatasetToPlot other) {
    if (other == null) {
      return;
    }
    rows_.Add(other.rows_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          rows_.AddEntriesFrom(input, _repeated_rows_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class DatasetRow : pb::IMessage<DatasetRow> {
  private static readonly pb::MessageParser<DatasetRow> _parser = new pb::MessageParser<DatasetRow>(() => new DatasetRow());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DatasetRow> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ImmvisReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetRow() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetRow(DatasetRow other) : this() {
    rowValues_ = other.rowValues_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DatasetRow Clone() {
    return new DatasetRow(this);
  }

  /// <summary>Field number for the "rowValues" field.</summary>
  public const int RowValuesFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_rowValues_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> rowValues_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> RowValues {
    get { return rowValues_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DatasetRow);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DatasetRow other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!rowValues_.Equals(other.rowValues_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= rowValues_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    rowValues_.WriteTo(output, _repeated_rowValues_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += rowValues_.CalculateSize(_repeated_rowValues_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DatasetRow other) {
    if (other == null) {
      return;
    }
    rowValues_.Add(other.rowValues_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          rowValues_.AddEntriesFrom(input, _repeated_rowValues_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
